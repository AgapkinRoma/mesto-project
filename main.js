(()=>{"use strict";var __webpack_modules__={745:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  M: () => (/* binding */ handleDeleteCard),\n  y: () => (/* binding */ handleLikeStatus)\n});\n\n;// CONCATENATED MODULE: ./src/components/modal.js\nfunction closeByEscape(evt) {\n  if (evt.key === "Escape") {\n    var openedPopup = document.querySelector(".popup_opened");\n    closePopup(openedPopup);\n  }\n}\nfunction openPopup(popup) {\n  popup.classList.add("popup_opened");\n  document.addEventListener("keydown", closeByEscape);\n}\n\n//универсальные функции открытия/закрытия попапов\nfunction closePopup(popup) {\n  popup.classList.remove("popup_opened");\n  document.removeEventListener("keydown", closeByEscape);\n}\n;// CONCATENATED MODULE: ./src/components/cards.js\n//импорты\n\n\n\n//объявление переменных\nvar popupPhotoScale = document.querySelector(".popup-img");\nvar popupImgPhoto = document.querySelector(".popup-img__photo");\nvar popupImgText = document.querySelector(".popup-img__text");\nvar placesContainer = document.querySelector(".elements");\n\n//функция проверки постановки лайка\nfunction isLiked(likes, userId) {\n  return likes.find(function (like) {\n    return like._id === userId;\n  });\n}\n\n//функция обновлениея статуса лайка\nfunction statusLikeUpdate(cardElement, likes, userId) {\n  var elementLike = cardElement.querySelector(".element__like");\n  var likeEnumerator = cardElement.querySelector(".element__like_enumerator");\n  likeEnumerator.textContent = likes.length;\n  if (isLiked(likes, userId)) {\n    elementLike.classList.add("element__like_active");\n  } else {\n    elementLike.classList.remove("element__like_active");\n  }\n}\n\n//функция создания карточки\nfunction createCard(data, container, userId) {\n  var placeElement = getCard(data, userId, handleDeleteCard, handleLikeStatus);\n  container.prepend(placeElement);\n}\n//функция открытия попапа "Увиличение картинки"\nfunction showPopupPhotoScale(img, title) {\n  openPopup(popupPhotoScale);\n  popupImgPhoto.src = img.src;\n  popupImgPhoto.alt = "".concat(title, ".");\n  popupImgText.textContent = title;\n}\n//функция получения карточки\nfunction getCard(data, userId, handleDeleteCard, handleLikeStatus) {\n  var placeTemplate = document.querySelector("#element-template").content;\n  var placeElement = placeTemplate.cloneNode(true);\n  var elementImg = placeElement.querySelector(".element__photo");\n  var elementTitle = placeElement.querySelector(".element__title");\n  var elementTrash = placeElement.querySelector(".element__delete");\n  var elementLike = placeElement.querySelector(".element__like");\n  var cardElement = placeElement.querySelector(".element");\n  elementTitle.textContent = data.name;\n  elementImg.src = data.link;\n  elementImg.alt = data.name;\n  statusLikeUpdate(cardElement, data.likes, userId);\n  elementTrash.addEventListener("click", function () {\n    return handleDeleteCard(data._id, cardElement);\n  });\n  elementLike.addEventListener("click", function () {\n    return handleLikeStatus(data._id, elementLike.classList.contains("element__like_active"), cardElement);\n  });\n  elementImg.addEventListener("click", function () {\n    return showPopupPhotoScale(elementImg, data.name);\n  });\n  if (data.owner._id !== userId) {\n    elementTrash.remove();\n  }\n  return placeElement;\n}\n\n//функция удаления карточки\nfunction deleteElement(element) {\n  element.remove();\n}\n\n//функция лайка карточки\nfunction likeElement(like) {\n  like.classList.toggle("element__like_active");\n}\n;// CONCATENATED MODULE: ./src/components/validate.js\nfunction showInputError(formElement, inputElement, errorMessage, settings) {\n  var popupError = formElement.querySelector(".".concat(inputElement.id, "-error"));\n  inputElement.classList.add(settings.inputErrorClass);\n  popupError.classList.add(settings.errorClass);\n  popupError.textContent = errorMessage;\n}\nfunction hidenIputError(formElement, inputElement, settings) {\n  var popupError = formElement.querySelector(".".concat(inputElement.id, "-error"));\n  inputElement.classList.remove(settings.inputErrorClass);\n  popupError.classList.remove(settings.errorClass);\n  popupError.textContent = "";\n}\nfunction disabledButton(buttonElement, settings) {\n  buttonElement.classList.add(settings.inactiveButtonClass);\n  buttonElement.disabled = true;\n}\nfunction checkInputValidity(formElement, inputElement, settings) {\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, settings);\n  } else {\n    hidenIputError(formElement, inputElement, settings);\n  }\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity("");\n  }\n}\nfunction setEventListeners(formElement, settings) {\n  var inputList = Array.from(formElement.querySelectorAll(settings.inputSelector));\n  var buttonElement = formElement.querySelector(settings.submitButtonSelector);\n  toggleButtonState(inputList, buttonElement, settings);\n  formElement.addEventListener("reset", function () {\n    disabledButton(buttonElement, settings);\n  });\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener("input", function () {\n      checkInputValidity(formElement, inputElement, settings);\n      toggleButtonState(inputList, buttonElement, settings);\n    });\n  });\n}\nfunction enableValidation(settings) {\n  var formList = Array.from(document.querySelectorAll(settings.formSelector));\n  formList.forEach(function (formElement) {\n    setEventListeners(formElement, settings);\n  });\n}\nfunction hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n}\nfunction toggleButtonState(inputList, buttonElement, settings) {\n  if (hasInvalidInput(inputList)) {\n    disabledButton(buttonElement, settings);\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(settings.inactiveButtonClass);\n  }\n}\n\n;// CONCATENATED MODULE: ./src/components/api.js\n///servak\n\nvar config = {\n  basicUrl: "https://nomoreparties.co/v1/plus-cohort-25",\n  headers: {\n    authorization: "826428a0-055f-4d25-b211-48bad9e30bcd",\n    "content-type": "application/json"\n  }\n};\nfunction onResponse(res) {\n  return res.ok ? res.json() : res.json().then(function (data) {\n    return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430".concat(data.status));\n  });\n}\nfunction getAllData() {\n  return Promise.all([userData(), getAllCards()]);\n}\nfunction userData() {\n  return fetch("".concat(config.basicUrl, "/users/me"), {\n    headers: config.headers\n  }).then(onResponse);\n}\nfunction getAllCards() {\n  return fetch("".concat(config.basicUrl, "/cards"), {\n    headers: config.headers\n  }).then(onResponse);\n}\nfunction editUserProfile(nameInput, jobInput) {\n  return fetch("".concat(config.basicUrl, "/users/me"), {\n    method: "PATCH",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: nameInput.value,\n      about: jobInput.value\n    })\n  }).then(onResponse);\n}\nfunction addCard(data) {\n  return fetch("".concat(config.basicUrl, "/cards"), {\n    method: "POST",\n    headers: config.headers,\n    body: JSON.stringify(data)\n  }).then(onResponse);\n}\nfunction deleteCard(data) {\n  return fetch("".concat(config.basicUrl, "/cards/").concat(data), {\n    method: "DELETE",\n    headers: config.headers\n  }).then(onResponse);\n}\nfunction changelikeStatus(data, isLike) {\n  return fetch("".concat(config.basicUrl, "/cards/likes/").concat(data), {\n    method: isLike ? "DELETE" : "PUT",\n    headers: config.headers\n  }).then(onResponse);\n}\nfunction changeAvatar(profileAvatar) {\n  return fetch("".concat(config.basicUrl, "/users/me/avatar"), {\n    method: "PATCH",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: profileAvatar.value\n    })\n  }).then(onResponse);\n}\n;// CONCATENATED MODULE: ./src/components/utilits.js\n//функция для UX кнопки\nfunction setButtonStatus(_ref) {\n  var button = _ref.button,\n    disabled = _ref.disabled,\n    text = _ref.text;\n  if (disabled) {\n    button.disabled = true;\n  } else {\n    button.disabled = false;\n  }\n  button.textContent = text;\n}\n;// CONCATENATED MODULE: ./src/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n//импорты\n\n\n\n\n\n\n//объявление переменных\nvar buttonOpenEditProfileForm = document.querySelector(".profile__edit-button");\nvar popupEditProfile = document.querySelector(".popup_edit-profile");\nvar buttonOpenAddCardForm = document.querySelector(".profile__add-button");\nvar popupCards = document.querySelector(".popup_cards");\nvar profileName = document.querySelector(".profile__name");\nvar profileStatus = document.querySelector(".profile__status");\nvar formEditProfile = document.forms["profile-form"];\nvar nameInput = document.querySelector(".popup__name-input");\nvar jobInput = document.querySelector(".popup__job-input");\nvar formAddCard = document.forms["card-form"];\nvar nameCardInput = document.querySelector(".popup-cards__name-input");\nvar urlCardInput = document.querySelector(".popup-cards__url-input");\nvar popups = document.querySelectorAll(".popup");\nvar popupSubmit = document.querySelector(".popup__submit");\nvar popupAvatar = document.querySelector(".popup_avatar");\nvar avatarButton = document.querySelector(".profile__avatar-button");\nvar avatarInput = document.querySelector(".popup_avatar__input");\nvar profilePhoto = document.querySelector(".profile__avatar");\nvar avatarForm = document.forms["avatar"];\n\n//общая функция для попапов для закрытия через ESC и Крестик\npopups.forEach(function (popup) {\n  popup.addEventListener("mousedown", function (evt) {\n    if (evt.target.classList.contains("popup_opened")) {\n      closePopup(popup);\n    }\n    if (evt.target.classList.contains("popup__close")) {\n      closePopup(popup);\n    }\n  });\n});\n\n//открытие попапа замены аватара\navatarButton.addEventListener("click", function () {\n  openPopup(popupAvatar);\n});\n\n//открытие попапа Редактировать профиль\nbuttonOpenEditProfileForm.addEventListener("click", function () {\n  openPopup(popupEditProfile);\n  nameInput.value = profileName.textContent;\n  jobInput.value = profileStatus.textContent;\n  popupSubmit.disabled = false;\n  popupSubmit.classList.remove("popup__submit_inactive");\n});\n\n//открытие попапа новое место\nbuttonOpenAddCardForm.addEventListener("click", function () {\n  openPopup(popupCards);\n});\n\n//получение данных профиля и карточек с сервера\nvar userId = null;\ngetAllData().then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    user = _ref2[0],\n    cards = _ref2[1];\n  profileName.textContent = user.name;\n  profileStatus.textContent = user.about;\n  profilePhoto.src = user.avatar;\n  userId = user._id;\n  cards.reverse().forEach(function (card) {\n    createCard(card, placesContainer, userId);\n  });\n}).catch(function (error) {\n  console.log("\\u0423\\u043F\\u0441, \\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 - ".concat(error));\n});\n\n//функция удаление карточки с сервера\nfunction handleDeleteCard(cardId, cardElement) {\n  deleteCard(cardId).then(function () {\n    deleteElement(cardElement);\n  }).catch(function (error) {\n    console.log("\\u0423\\u043F\\u0441, \\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 - ".concat(error));\n  });\n}\n\n//функция лайка на сервере\nfunction handleLikeStatus(likeId, isLiked, cardElement) {\n  changelikeStatus(likeId, isLiked).then(function (data) {\n    statusLikeUpdate(cardElement, data.likes, userId);\n  }).catch(function (error) {\n    console.log("\\u0423\\u043F\\u0441, \\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 -".concat(error));\n  });\n}\n\n//функция самбита профиля\nfunction submitEditProfileForm(evt) {\n  setButtonStatus({\n    button: popupSubmit,\n    disabled: true,\n    text: "Сохраняем..."\n  });\n  evt.preventDefault();\n  editUserProfile(nameInput, jobInput).then(function (data) {\n    profileName.textContent = data.name;\n    profileStatus.textContent = data.about;\n    closePopup(popupEditProfile);\n    popupSubmit.disabled = true;\n  }).catch(function (error) {\n    console.log("\\u0423\\u043F\\u0441, \\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 - ".concat(error));\n  }).finally(function () {\n    setButtonStatus({\n      button: popupSubmit,\n      disabled: false,\n      text: "Сохранить"\n    });\n  });\n}\nformEditProfile.addEventListener("submit", submitEditProfileForm);\n\n//функция самбита новой карточки\nfunction submitFormAddCard(evt) {\n  setButtonStatus({\n    button: popupSubmit,\n    disabled: true,\n    text: "Сохраняем..."\n  });\n  evt.preventDefault();\n  addCard({\n    name: nameCardInput.value,\n    link: urlCardInput.value\n  }).then(function (dataCard) {\n    createCard(dataCard, placesContainer, userId);\n    closePopup(popupCards);\n    formAddCard.reset();\n  }).catch(function (error) {\n    console.log("\\u0423\\u043F\\u0441, \\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 - ".concat(error));\n  }).finally(function () {\n    setButtonStatus({\n      button: popupSubmit,\n      disabled: false,\n      text: "Сохранить"\n    });\n  });\n}\nformAddCard.addEventListener("submit", submitFormAddCard);\n\n//функция самбита аватара\n\nfunction submitAvatar(evt) {\n  setButtonStatus({\n    button: popupSubmit,\n    disabled: true,\n    text: "Сохраняем..."\n  });\n  evt.preventDefault();\n  changeAvatar(avatarInput).then(function (data) {\n    profilePhoto.src = data.avatar;\n    closePopup(popupAvatar);\n    avatarForm.reset();\n  }).catch(function (error) {\n    console.log("\\u0423\\u043F\\u0441, \\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 -".concat(error));\n  }).finally(function () {\n    setButtonStatus({\n      button: popupSubmit,\n      disabled: false,\n      text: "Сохранить"\n    });\n  });\n}\navatarForm.addEventListener("submit", submitAvatar);\n\n//валидация\nenableValidation({\n  formSelector: ".form",\n  inputSelector: ".form__input",\n  submitButtonSelector: ".popup__submit",\n  inactiveButtonClass: "popup__submit_inactive",\n  inputErrorClass: "popup__input_type-error",\n  errorClass: "popup__input_type-error_text"\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDZCxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvbW9kYWwuanM/NmNmYSIsIndlYnBhY2s6Ly9tZXN0by1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvY2FyZHMuanM/NjVjYSIsIndlYnBhY2s6Ly9tZXN0by1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvdmFsaWRhdGUuanM/ZWRkOSIsIndlYnBhY2s6Ly9tZXN0by1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvYXBpLmpzPzg2ODAiLCJ3ZWJwYWNrOi8vbWVzdG8tcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL3V0aWxpdHMuanM/NWJlYSIsIndlYnBhY2s6Ly9tZXN0by1wcm9qZWN0Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gY2xvc2VCeUVzY2FwZShldnQpIHtcbiAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICBjb25zdCBvcGVuZWRQb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfb3BlbmVkXCIpO1xuICAgIGNsb3NlUG9wdXAob3BlbmVkUG9wdXApO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gb3BlblBvcHVwKHBvcHVwKSB7XG4gIHBvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9vcGVuZWRcIik7XG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGNsb3NlQnlFc2NhcGUpO1xufVxuXG4vL9GD0L3QuNCy0LXRgNGB0LDQu9GM0L3Ri9C1INGE0YPQvdC60YbQuNC4INC+0YLQutGA0YvRgtC40Y8v0LfQsNC60YDRi9GC0LjRjyDQv9C+0L/QsNC/0L7QslxuZXhwb3J0IGZ1bmN0aW9uIGNsb3NlUG9wdXAocG9wdXApIHtcbiAgcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX29wZW5lZFwiKTtcbiAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgY2xvc2VCeUVzY2FwZSk7XG59XG4iLCIvL9C40LzQv9C+0YDRgtGLXG5pbXBvcnQgeyBvcGVuUG9wdXAgfSBmcm9tIFwiLi9tb2RhbC5qc1wiO1xuaW1wb3J0IHsgaGFuZGxlRGVsZXRlQ2FyZCwgaGFuZGxlTGlrZVN0YXR1cyB9IGZyb20gXCIuLi9pbmRleC5qc1wiO1xuXG4vL9C+0LHRitGP0LLQu9C10L3QuNC1INC/0LXRgNC10LzQtdC90L3Ri9GFXG5jb25zdCBwb3B1cFBob3RvU2NhbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwLWltZ1wiKTtcbmNvbnN0IHBvcHVwSW1nUGhvdG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwLWltZ19fcGhvdG9cIik7XG5jb25zdCBwb3B1cEltZ1RleHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwLWltZ19fdGV4dFwiKTtcbmV4cG9ydCBjb25zdCBwbGFjZXNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzXCIpO1xuXG4vL9GE0YPQvdC60YbQuNGPINC/0YDQvtCy0LXRgNC60Lgg0L/QvtGB0YLQsNC90L7QstC60Lgg0LvQsNC50LrQsFxuZnVuY3Rpb24gaXNMaWtlZChsaWtlcywgdXNlcklkKSB7XG4gIHJldHVybiBsaWtlcy5maW5kKChsaWtlKSA9PiB7XG4gICAgcmV0dXJuIGxpa2UuX2lkID09PSB1c2VySWQ7XG4gIH0pO1xufVxuXG4vL9GE0YPQvdC60YbQuNGPINC+0LHQvdC+0LLQu9C10L3QuNC10Y8g0YHRgtCw0YLRg9GB0LAg0LvQsNC50LrQsFxuZXhwb3J0IGZ1bmN0aW9uIHN0YXR1c0xpa2VVcGRhdGUoY2FyZEVsZW1lbnQsIGxpa2VzLCB1c2VySWQpIHtcbiAgY29uc3QgZWxlbWVudExpa2UgPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2xpa2VcIik7XG4gIGNvbnN0IGxpa2VFbnVtZXJhdG9yID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19saWtlX2VudW1lcmF0b3JcIik7XG4gIGxpa2VFbnVtZXJhdG9yLnRleHRDb250ZW50ID0gbGlrZXMubGVuZ3RoO1xuICBpZiAoaXNMaWtlZChsaWtlcywgdXNlcklkKSkge1xuICAgIGVsZW1lbnRMaWtlLmNsYXNzTGlzdC5hZGQoXCJlbGVtZW50X19saWtlX2FjdGl2ZVwiKTtcbiAgfSBlbHNlIHtcbiAgICBlbGVtZW50TGlrZS5jbGFzc0xpc3QucmVtb3ZlKFwiZWxlbWVudF9fbGlrZV9hY3RpdmVcIik7XG4gIH1cbn1cblxuLy/RhNGD0L3QutGG0LjRjyDRgdC+0LfQtNCw0L3QuNGPINC60LDRgNGC0L7Rh9C60LhcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDYXJkKGRhdGEsIGNvbnRhaW5lciwgdXNlcklkKSB7XG4gIGNvbnN0IHBsYWNlRWxlbWVudCA9IGdldENhcmQoXG4gICAgZGF0YSxcbiAgICB1c2VySWQsXG4gICAgaGFuZGxlRGVsZXRlQ2FyZCxcbiAgICBoYW5kbGVMaWtlU3RhdHVzXG4gICk7XG4gIGNvbnRhaW5lci5wcmVwZW5kKHBsYWNlRWxlbWVudCk7XG59XG4vL9GE0YPQvdC60YbQuNGPINC+0YLQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9CwIFwi0KPQstC40LvQuNGH0LXQvdC40LUg0LrQsNGA0YLQuNC90LrQuFwiXG5leHBvcnQgZnVuY3Rpb24gc2hvd1BvcHVwUGhvdG9TY2FsZShpbWcsIHRpdGxlKSB7XG4gIG9wZW5Qb3B1cChwb3B1cFBob3RvU2NhbGUpO1xuICBwb3B1cEltZ1Bob3RvLnNyYyA9IGltZy5zcmM7XG4gIHBvcHVwSW1nUGhvdG8uYWx0ID0gYCR7dGl0bGV9LmA7XG4gIHBvcHVwSW1nVGV4dC50ZXh0Q29udGVudCA9IHRpdGxlO1xufVxuLy/RhNGD0L3QutGG0LjRjyDQv9C+0LvRg9GH0LXQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuFxuZXhwb3J0IGZ1bmN0aW9uIGdldENhcmQoZGF0YSwgdXNlcklkLCBoYW5kbGVEZWxldGVDYXJkLCBoYW5kbGVMaWtlU3RhdHVzKSB7XG4gIGNvbnN0IHBsYWNlVGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VsZW1lbnQtdGVtcGxhdGVcIikuY29udGVudDtcbiAgY29uc3QgcGxhY2VFbGVtZW50ID0gcGxhY2VUZW1wbGF0ZS5jbG9uZU5vZGUodHJ1ZSk7XG4gIGNvbnN0IGVsZW1lbnRJbWcgPSBwbGFjZUVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19waG90b1wiKTtcbiAgY29uc3QgZWxlbWVudFRpdGxlID0gcGxhY2VFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fdGl0bGVcIik7XG4gIGNvbnN0IGVsZW1lbnRUcmFzaCA9IHBsYWNlRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2RlbGV0ZVwiKTtcbiAgY29uc3QgZWxlbWVudExpa2UgPSBwbGFjZUVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19saWtlXCIpO1xuICBjb25zdCBjYXJkRWxlbWVudCA9IHBsYWNlRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRcIik7XG4gIGVsZW1lbnRUaXRsZS50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcbiAgZWxlbWVudEltZy5zcmMgPSBkYXRhLmxpbms7XG4gIGVsZW1lbnRJbWcuYWx0ID0gZGF0YS5uYW1lO1xuICBzdGF0dXNMaWtlVXBkYXRlKGNhcmRFbGVtZW50LCBkYXRhLmxpa2VzLCB1c2VySWQpO1xuICBlbGVtZW50VHJhc2guYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XG4gICAgaGFuZGxlRGVsZXRlQ2FyZChkYXRhLl9pZCwgY2FyZEVsZW1lbnQpXG4gICk7XG4gIGVsZW1lbnRMaWtlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxuICAgIGhhbmRsZUxpa2VTdGF0dXMoXG4gICAgICBkYXRhLl9pZCxcbiAgICAgIGVsZW1lbnRMaWtlLmNsYXNzTGlzdC5jb250YWlucyhcImVsZW1lbnRfX2xpa2VfYWN0aXZlXCIpLFxuICAgICAgY2FyZEVsZW1lbnRcbiAgICApXG4gICk7XG4gIGVsZW1lbnRJbWcuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XG4gICAgc2hvd1BvcHVwUGhvdG9TY2FsZShlbGVtZW50SW1nLCBkYXRhLm5hbWUpXG4gICk7XG4gIGlmIChkYXRhLm93bmVyLl9pZCAhPT0gdXNlcklkKSB7XG4gICAgZWxlbWVudFRyYXNoLnJlbW92ZSgpO1xuICB9XG4gIHJldHVybiBwbGFjZUVsZW1lbnQ7XG59XG5cbi8v0YTRg9C90LrRhtC40Y8g0YPQtNCw0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XG5leHBvcnQgZnVuY3Rpb24gZGVsZXRlRWxlbWVudChlbGVtZW50KSB7XG4gIGVsZW1lbnQucmVtb3ZlKCk7XG59XG5cbi8v0YTRg9C90LrRhtC40Y8g0LvQsNC50LrQsCDQutCw0YDRgtC+0YfQutC4XG5leHBvcnQgZnVuY3Rpb24gbGlrZUVsZW1lbnQobGlrZSkge1xuICBsaWtlLmNsYXNzTGlzdC50b2dnbGUoXCJlbGVtZW50X19saWtlX2FjdGl2ZVwiKTtcbn1cbiIsImZ1bmN0aW9uIHNob3dJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSwgc2V0dGluZ3MpIHtcbiAgY29uc3QgcG9wdXBFcnJvciA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQoc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzKTtcbiAgcG9wdXBFcnJvci5jbGFzc0xpc3QuYWRkKHNldHRpbmdzLmVycm9yQ2xhc3MpO1xuICBwb3B1cEVycm9yLnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xufVxuZnVuY3Rpb24gaGlkZW5JcHV0RXJyb3IoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCwgc2V0dGluZ3MpIHtcbiAgY29uc3QgcG9wdXBFcnJvciA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzKTtcbiAgcG9wdXBFcnJvci5jbGFzc0xpc3QucmVtb3ZlKHNldHRpbmdzLmVycm9yQ2xhc3MpO1xuICBwb3B1cEVycm9yLnRleHRDb250ZW50ID0gXCJcIjtcbn1cbmZ1bmN0aW9uIGRpc2FibGVkQnV0dG9uKGJ1dHRvbkVsZW1lbnQsIHNldHRpbmdzKSB7XG4gIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZChzZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XG59XG5mdW5jdGlvbiBjaGVja0lucHV0VmFsaWRpdHkoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCwgc2V0dGluZ3MpIHtcbiAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICBzaG93SW5wdXRFcnJvcihcbiAgICAgIGZvcm1FbGVtZW50LFxuICAgICAgaW5wdXRFbGVtZW50LFxuICAgICAgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlLFxuICAgICAgc2V0dGluZ3NcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIGhpZGVuSXB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIHNldHRpbmdzKTtcbiAgfVxuICBpZiAoaW5wdXRFbGVtZW50LnZhbGlkaXR5LnBhdHRlcm5NaXNtYXRjaCkge1xuICAgIGlucHV0RWxlbWVudC5zZXRDdXN0b21WYWxpZGl0eShpbnB1dEVsZW1lbnQuZGF0YXNldC5lcnJvck1lc3NhZ2UpO1xuICB9IGVsc2Uge1xuICAgIGlucHV0RWxlbWVudC5zZXRDdXN0b21WYWxpZGl0eShcIlwiKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzZXRFdmVudExpc3RlbmVycyhmb3JtRWxlbWVudCwgc2V0dGluZ3MpIHtcbiAgY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcbiAgICBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHNldHRpbmdzLmlucHV0U2VsZWN0b3IpXG4gICk7XG4gIGNvbnN0IGJ1dHRvbkVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgIHNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yXG4gICk7XG4gIHRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCwgc2V0dGluZ3MpO1xuICBmb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwicmVzZXRcIiwgKCkgPT4ge1xuICAgIGRpc2FibGVkQnV0dG9uKGJ1dHRvbkVsZW1lbnQsIHNldHRpbmdzKTtcbiAgfSk7XG5cbiAgaW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgY2hlY2tJbnB1dFZhbGlkaXR5KGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIHNldHRpbmdzKTtcbiAgICAgIHRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCwgc2V0dGluZ3MpO1xuICAgIH0pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gZW5hYmxlVmFsaWRhdGlvbihzZXR0aW5ncykge1xuICBjb25zdCBmb3JtTGlzdCA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChzZXR0aW5ncy5mb3JtU2VsZWN0b3IpKTtcbiAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcbiAgICBzZXRFdmVudExpc3RlbmVycyhmb3JtRWxlbWVudCwgc2V0dGluZ3MpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkge1xuICByZXR1cm4gaW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xuICB9KTtcbn1cbmZ1bmN0aW9uIHRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCwgc2V0dGluZ3MpIHtcbiAgaWYgKGhhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpKSB7XG4gICAgZGlzYWJsZWRCdXR0b24oYnV0dG9uRWxlbWVudCwgc2V0dGluZ3MpO1xuICB9IGVsc2Uge1xuICAgIGJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gIH1cbn1cbmV4cG9ydCB7IGVuYWJsZVZhbGlkYXRpb24gfTtcbiIsIi8vL3NlcnZha1xuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBiYXNpY1VybDogXCJodHRwczovL25vbW9yZXBhcnRpZXMuY28vdjEvcGx1cy1jb2hvcnQtMjVcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiODI2NDI4YTAtMDU1Zi00ZDI1LWIyMTEtNDhiYWQ5ZTMwYmNkXCIsXG4gICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gIH0sXG59O1xuXG5mdW5jdGlvbiBvblJlc3BvbnNlKHJlcykge1xuICByZXR1cm4gcmVzLm9rXG4gICAgPyByZXMuanNvbigpXG4gICAgOiByZXMuanNvbigpLnRoZW4oKGRhdGEpID0+IFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAke2RhdGEuc3RhdHVzfWApKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEFsbERhdGEoKSB7XG4gIHJldHVybiBQcm9taXNlLmFsbChbdXNlckRhdGEoKSwgZ2V0QWxsQ2FyZHMoKV0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlckRhdGEoKSB7XG4gIHJldHVybiBmZXRjaChgJHtjb25maWcuYmFzaWNVcmx9L3VzZXJzL21lYCwge1xuICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzLFxuICB9KS50aGVuKG9uUmVzcG9uc2UpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWxsQ2FyZHMoKSB7XG4gIHJldHVybiBmZXRjaChgJHtjb25maWcuYmFzaWNVcmx9L2NhcmRzYCwge1xuICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzLFxuICB9KS50aGVuKG9uUmVzcG9uc2UpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZWRpdFVzZXJQcm9maWxlKG5hbWVJbnB1dCwgam9iSW5wdXQpIHtcbiAgcmV0dXJuIGZldGNoKGAke2NvbmZpZy5iYXNpY1VybH0vdXNlcnMvbWVgLCB7XG4gICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgbmFtZTogbmFtZUlucHV0LnZhbHVlLFxuICAgICAgYWJvdXQ6IGpvYklucHV0LnZhbHVlLFxuICAgIH0pLFxuICB9KS50aGVuKG9uUmVzcG9uc2UpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkQ2FyZChkYXRhKSB7XG4gIHJldHVybiBmZXRjaChgJHtjb25maWcuYmFzaWNVcmx9L2NhcmRzYCwge1xuICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXG4gIH0pLnRoZW4ob25SZXNwb25zZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWxldGVDYXJkKGRhdGEpIHtcbiAgcmV0dXJuIGZldGNoKGAke2NvbmZpZy5iYXNpY1VybH0vY2FyZHMvJHtkYXRhfWAsIHtcbiAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXG4gIH0pLnRoZW4ob25SZXNwb25zZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGFuZ2VsaWtlU3RhdHVzKGRhdGEsIGlzTGlrZSkge1xuICByZXR1cm4gZmV0Y2goYCR7Y29uZmlnLmJhc2ljVXJsfS9jYXJkcy9saWtlcy8ke2RhdGF9YCwge1xuICAgIG1ldGhvZDogaXNMaWtlID8gXCJERUxFVEVcIiA6IFwiUFVUXCIsXG4gICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXG4gIH0pLnRoZW4ob25SZXNwb25zZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGFuZ2VBdmF0YXIocHJvZmlsZUF2YXRhcikge1xuICByZXR1cm4gZmV0Y2goYCR7Y29uZmlnLmJhc2ljVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgYXZhdGFyOiBwcm9maWxlQXZhdGFyLnZhbHVlLFxuICAgIH0pLFxuICB9KS50aGVuKG9uUmVzcG9uc2UpO1xufVxuIiwiLy/RhNGD0L3QutGG0LjRjyDQtNC70Y8gVVgg0LrQvdC+0L/QutC4XG5leHBvcnQgZnVuY3Rpb24gc2V0QnV0dG9uU3RhdHVzKHsgYnV0dG9uLCBkaXNhYmxlZCwgdGV4dCB9KSB7XG4gIGlmIChkaXNhYmxlZCkge1xuICAgIGJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG4gIH0gZWxzZSB7XG4gICAgYnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XG4gIH1cbiAgYnV0dG9uLnRleHRDb250ZW50ID0gdGV4dDtcbn1cbiIsIi8v0LjQvNC/0L7RgNGC0YtcbmltcG9ydCBcIi4vcGFnZXMvaW5kZXguY3NzXCI7XG5pbXBvcnQge1xuICBjcmVhdGVDYXJkLFxuICBwbGFjZXNDb250YWluZXIsXG4gIGRlbGV0ZUVsZW1lbnQsXG4gIHN0YXR1c0xpa2VVcGRhdGUsXG59IGZyb20gXCIuL2NvbXBvbmVudHMvY2FyZHMuanNcIjtcbmltcG9ydCB7IGVuYWJsZVZhbGlkYXRpb24gfSBmcm9tIFwiLi9jb21wb25lbnRzL3ZhbGlkYXRlLmpzXCI7XG5pbXBvcnQgeyBvcGVuUG9wdXAsIGNsb3NlUG9wdXAgfSBmcm9tIFwiLi9jb21wb25lbnRzL21vZGFsLmpzXCI7XG5pbXBvcnQge1xuICBlZGl0VXNlclByb2ZpbGUsXG4gIGFkZENhcmQsXG4gIGNoYW5nZUF2YXRhcixcbiAgZ2V0QWxsRGF0YSxcbiAgZGVsZXRlQ2FyZCxcbiAgY2hhbmdlbGlrZVN0YXR1cyxcbn0gZnJvbSBcIi4vY29tcG9uZW50cy9hcGkuanNcIjtcbmltcG9ydCB7IHNldEJ1dHRvblN0YXR1cyB9IGZyb20gXCIuL2NvbXBvbmVudHMvdXRpbGl0cy5qc1wiO1xuLy/QvtCx0YrRj9Cy0LvQtdC90LjQtSDQv9C10YDQtdC80LXQvdC90YvRhVxuY29uc3QgYnV0dG9uT3BlbkVkaXRQcm9maWxlRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLnByb2ZpbGVfX2VkaXQtYnV0dG9uXCJcbik7XG5jb25zdCBwb3B1cEVkaXRQcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9lZGl0LXByb2ZpbGVcIik7XG5jb25zdCBidXR0b25PcGVuQWRkQ2FyZEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idXR0b25cIik7XG5jb25zdCBwb3B1cENhcmRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9jYXJkc1wiKTtcbmNvbnN0IHByb2ZpbGVOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19uYW1lXCIpO1xuY29uc3QgcHJvZmlsZVN0YXR1cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fc3RhdHVzXCIpO1xuY29uc3QgZm9ybUVkaXRQcm9maWxlID0gZG9jdW1lbnQuZm9ybXNbXCJwcm9maWxlLWZvcm1cIl07XG5jb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19uYW1lLWlucHV0XCIpO1xuY29uc3Qgam9iSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19qb2ItaW5wdXRcIik7XG5jb25zdCBmb3JtQWRkQ2FyZCA9IGRvY3VtZW50LmZvcm1zW1wiY2FyZC1mb3JtXCJdO1xuY29uc3QgbmFtZUNhcmRJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXAtY2FyZHNfX25hbWUtaW5wdXRcIik7XG5jb25zdCB1cmxDYXJkSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwLWNhcmRzX191cmwtaW5wdXRcIik7XG5jb25zdCBwb3B1cHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwXCIpO1xuY29uc3QgcG9wdXBTdWJtaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19zdWJtaXRcIik7XG5jb25zdCBwb3B1cEF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfYXZhdGFyXCIpO1xuY29uc3QgYXZhdGFyQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXItYnV0dG9uXCIpO1xuY29uc3QgYXZhdGFySW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX2F2YXRhcl9faW5wdXRcIik7XG5jb25zdCBwcm9maWxlUGhvdG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2F2YXRhclwiKTtcbmNvbnN0IGF2YXRhckZvcm0gPSBkb2N1bWVudC5mb3Jtc1tcImF2YXRhclwiXTtcblxuLy/QvtCx0YnQsNGPINGE0YPQvdC60YbQuNGPINC00LvRjyDQv9C+0L/QsNC/0L7QsiDQtNC70Y8g0LfQsNC60YDRi9GC0LjRjyDRh9C10YDQtdC3IEVTQyDQuCDQmtGA0LXRgdGC0LjQulxucG9wdXBzLmZvckVhY2goKHBvcHVwKSA9PiB7XG4gIHBvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGV2dCkgPT4ge1xuICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwX29wZW5lZFwiKSkge1xuICAgICAgY2xvc2VQb3B1cChwb3B1cCk7XG4gICAgfVxuICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwX19jbG9zZVwiKSkge1xuICAgICAgY2xvc2VQb3B1cChwb3B1cCk7XG4gICAgfVxuICB9KTtcbn0pO1xuXG4vL9C+0YLQutGA0YvRgtC40LUg0L/QvtC/0LDQv9CwINC30LDQvNC10L3RiyDQsNCy0LDRgtCw0YDQsFxuYXZhdGFyQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIG9wZW5Qb3B1cChwb3B1cEF2YXRhcik7XG59KTtcblxuLy/QvtGC0LrRgNGL0YLQuNC1INC/0L7Qv9Cw0L/QsCDQoNC10LTQsNC60YLQuNGA0L7QstCw0YLRjCDQv9GA0L7RhNC40LvRjFxuYnV0dG9uT3BlbkVkaXRQcm9maWxlRm9ybS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBvcGVuUG9wdXAocG9wdXBFZGl0UHJvZmlsZSk7XG4gIG5hbWVJbnB1dC52YWx1ZSA9IHByb2ZpbGVOYW1lLnRleHRDb250ZW50O1xuICBqb2JJbnB1dC52YWx1ZSA9IHByb2ZpbGVTdGF0dXMudGV4dENvbnRlbnQ7XG4gIHBvcHVwU3VibWl0LmRpc2FibGVkID0gZmFsc2U7XG4gIHBvcHVwU3VibWl0LmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9fc3VibWl0X2luYWN0aXZlXCIpO1xufSk7XG5cbi8v0L7RgtC60YDRi9GC0LjQtSDQv9C+0L/QsNC/0LAg0L3QvtCy0L7QtSDQvNC10YHRgtC+XG5idXR0b25PcGVuQWRkQ2FyZEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgb3BlblBvcHVwKHBvcHVwQ2FyZHMpO1xufSk7XG5cbi8v0L/QvtC70YPRh9C10L3QuNC1INC00LDQvdC90YvRhSDQv9GA0L7RhNC40LvRjyDQuCDQutCw0YDRgtC+0YfQtdC6INGBINGB0LXRgNCy0LXRgNCwXG5sZXQgdXNlcklkID0gbnVsbDtcbmdldEFsbERhdGEoKVxuICAudGhlbigoW3VzZXIsIGNhcmRzXSkgPT4ge1xuICAgIHByb2ZpbGVOYW1lLnRleHRDb250ZW50ID0gdXNlci5uYW1lO1xuICAgIHByb2ZpbGVTdGF0dXMudGV4dENvbnRlbnQgPSB1c2VyLmFib3V0O1xuICAgIHByb2ZpbGVQaG90by5zcmMgPSB1c2VyLmF2YXRhcjtcbiAgICB1c2VySWQgPSB1c2VyLl9pZDtcbiAgICBjYXJkcy5yZXZlcnNlKCkuZm9yRWFjaCgoY2FyZCkgPT4ge1xuICAgICAgY3JlYXRlQ2FyZChjYXJkLCBwbGFjZXNDb250YWluZXIsIHVzZXJJZCk7XG4gICAgfSk7XG4gIH0pXG4gIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICBjb25zb2xlLmxvZyhg0KPQv9GBLCDQntGI0LjQsdC60LAgLSAke2Vycm9yfWApO1xuICB9KTtcblxuLy/RhNGD0L3QutGG0LjRjyDRg9C00LDQu9C10L3QuNC1INC60LDRgNGC0L7Rh9C60Lgg0YEg0YHQtdGA0LLQtdGA0LBcbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVEZWxldGVDYXJkKGNhcmRJZCwgY2FyZEVsZW1lbnQpIHtcbiAgZGVsZXRlQ2FyZChjYXJkSWQpXG4gICAgLnRoZW4oKCkgPT4ge1xuICAgICAgZGVsZXRlRWxlbWVudChjYXJkRWxlbWVudCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhg0KPQv9GBLCDQntGI0LjQsdC60LAgLSAke2Vycm9yfWApO1xuICAgIH0pO1xufVxuXG4vL9GE0YPQvdC60YbQuNGPINC70LDQudC60LAg0L3QsCDRgdC10YDQstC10YDQtVxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZUxpa2VTdGF0dXMobGlrZUlkLCBpc0xpa2VkLCBjYXJkRWxlbWVudCkge1xuICBjaGFuZ2VsaWtlU3RhdHVzKGxpa2VJZCwgaXNMaWtlZClcbiAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgc3RhdHVzTGlrZVVwZGF0ZShjYXJkRWxlbWVudCwgZGF0YS5saWtlcywgdXNlcklkKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGDQo9C/0YEsINCe0YjQuNCx0LrQsCAtJHtlcnJvcn1gKTtcbiAgICB9KTtcbn1cblxuLy/RhNGD0L3QutGG0LjRjyDRgdCw0LzQsdC40YLQsCDQv9GA0L7RhNC40LvRj1xuZnVuY3Rpb24gc3VibWl0RWRpdFByb2ZpbGVGb3JtKGV2dCkge1xuICBzZXRCdXR0b25TdGF0dXMoe1xuICAgIGJ1dHRvbjogcG9wdXBTdWJtaXQsXG4gICAgZGlzYWJsZWQ6IHRydWUsXG4gICAgdGV4dDogXCLQodC+0YXRgNCw0L3Rj9C10LwuLi5cIixcbiAgfSk7XG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICBlZGl0VXNlclByb2ZpbGUobmFtZUlucHV0LCBqb2JJbnB1dClcbiAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG4gICAgICBwcm9maWxlU3RhdHVzLnRleHRDb250ZW50ID0gZGF0YS5hYm91dDtcbiAgICAgIGNsb3NlUG9wdXAocG9wdXBFZGl0UHJvZmlsZSk7XG4gICAgICBwb3B1cFN1Ym1pdC5kaXNhYmxlZCA9IHRydWU7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhg0KPQv9GBLCDQntGI0LjQsdC60LAgLSAke2Vycm9yfWApO1xuICAgIH0pXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgc2V0QnV0dG9uU3RhdHVzKHtcbiAgICAgICAgYnV0dG9uOiBwb3B1cFN1Ym1pdCxcbiAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgICAgICB0ZXh0OiBcItCh0L7RhdGA0LDQvdC40YLRjFwiLFxuICAgICAgfSk7XG4gICAgfSk7XG59XG5cbmZvcm1FZGl0UHJvZmlsZS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIHN1Ym1pdEVkaXRQcm9maWxlRm9ybSk7XG5cbi8v0YTRg9C90LrRhtC40Y8g0YHQsNC80LHQuNGC0LAg0L3QvtCy0L7QuSDQutCw0YDRgtC+0YfQutC4XG5mdW5jdGlvbiBzdWJtaXRGb3JtQWRkQ2FyZChldnQpIHtcbiAgc2V0QnV0dG9uU3RhdHVzKHtcbiAgICBidXR0b246IHBvcHVwU3VibWl0LFxuICAgIGRpc2FibGVkOiB0cnVlLFxuICAgIHRleHQ6IFwi0KHQvtGF0YDQsNC90Y/QtdC8Li4uXCIsXG4gIH0pO1xuICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgYWRkQ2FyZCh7IG5hbWU6IG5hbWVDYXJkSW5wdXQudmFsdWUsIGxpbms6IHVybENhcmRJbnB1dC52YWx1ZSB9KVxuICAgIC50aGVuKChkYXRhQ2FyZCkgPT4ge1xuICAgICAgY3JlYXRlQ2FyZChkYXRhQ2FyZCwgcGxhY2VzQ29udGFpbmVyLCB1c2VySWQpO1xuICAgICAgY2xvc2VQb3B1cChwb3B1cENhcmRzKTtcbiAgICAgIGZvcm1BZGRDYXJkLnJlc2V0KCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhg0KPQv9GBLCDQntGI0LjQsdC60LAgLSAke2Vycm9yfWApO1xuICAgIH0pXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgc2V0QnV0dG9uU3RhdHVzKHtcbiAgICAgICAgYnV0dG9uOiBwb3B1cFN1Ym1pdCxcbiAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgICAgICB0ZXh0OiBcItCh0L7RhdGA0LDQvdC40YLRjFwiLFxuICAgICAgfSk7XG4gICAgfSk7XG59XG5mb3JtQWRkQ2FyZC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIHN1Ym1pdEZvcm1BZGRDYXJkKTtcblxuLy/RhNGD0L3QutGG0LjRjyDRgdCw0LzQsdC40YLQsCDQsNCy0LDRgtCw0YDQsFxuXG5mdW5jdGlvbiBzdWJtaXRBdmF0YXIoZXZ0KSB7XG4gIHNldEJ1dHRvblN0YXR1cyh7XG4gICAgYnV0dG9uOiBwb3B1cFN1Ym1pdCxcbiAgICBkaXNhYmxlZDogdHJ1ZSxcbiAgICB0ZXh0OiBcItCh0L7RhdGA0LDQvdGP0LXQvC4uLlwiLFxuICB9KTtcbiAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gIGNoYW5nZUF2YXRhcihhdmF0YXJJbnB1dClcbiAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgcHJvZmlsZVBob3RvLnNyYyA9IGRhdGEuYXZhdGFyO1xuICAgICAgY2xvc2VQb3B1cChwb3B1cEF2YXRhcik7XG4gICAgICBhdmF0YXJGb3JtLnJlc2V0KCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhg0KPQv9GBLCDQntGI0LjQsdC60LAgLSR7ZXJyb3J9YCk7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBzZXRCdXR0b25TdGF0dXMoe1xuICAgICAgICBidXR0b246IHBvcHVwU3VibWl0LFxuICAgICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgICAgIHRleHQ6IFwi0KHQvtGF0YDQsNC90LjRgtGMXCIsXG4gICAgICB9KTtcbiAgICB9KTtcbn1cblxuYXZhdGFyRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIHN1Ym1pdEF2YXRhcik7XG5cbi8v0LLQsNC70LjQtNCw0YbQuNGPXG5lbmFibGVWYWxpZGF0aW9uKHtcbiAgZm9ybVNlbGVjdG9yOiBcIi5mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLmZvcm1fX2lucHV0XCIsXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5wb3B1cF9fc3VibWl0XCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX3N1Ym1pdF9pbmFjdGl2ZVwiLFxuICBpbnB1dEVycm9yQ2xhc3M6IFwicG9wdXBfX2lucHV0X3R5cGUtZXJyb3JcIixcbiAgZXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXRfdHlwZS1lcnJvcl90ZXh0XCIsXG59KTtcbiJdLCJuYW1lcyI6WyJjbG9zZUJ5RXNjYXBlIiwiZXZ0Iiwia2V5Iiwib3BlbmVkUG9wdXAiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjbG9zZVBvcHVwIiwib3BlblBvcHVwIiwicG9wdXAiLCJjbGFzc0xpc3QiLCJhZGQiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImhhbmRsZURlbGV0ZUNhcmQiLCJoYW5kbGVMaWtlU3RhdHVzIiwicG9wdXBQaG90b1NjYWxlIiwicG9wdXBJbWdQaG90byIsInBvcHVwSW1nVGV4dCIsInBsYWNlc0NvbnRhaW5lciIsImlzTGlrZWQiLCJsaWtlcyIsInVzZXJJZCIsImZpbmQiLCJsaWtlIiwiX2lkIiwic3RhdHVzTGlrZVVwZGF0ZSIsImNhcmRFbGVtZW50IiwiZWxlbWVudExpa2UiLCJsaWtlRW51bWVyYXRvciIsInRleHRDb250ZW50IiwibGVuZ3RoIiwiY3JlYXRlQ2FyZCIsImRhdGEiLCJjb250YWluZXIiLCJwbGFjZUVsZW1lbnQiLCJnZXRDYXJkIiwicHJlcGVuZCIsInNob3dQb3B1cFBob3RvU2NhbGUiLCJpbWciLCJ0aXRsZSIsInNyYyIsImFsdCIsImNvbmNhdCIsInBsYWNlVGVtcGxhdGUiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiZWxlbWVudEltZyIsImVsZW1lbnRUaXRsZSIsImVsZW1lbnRUcmFzaCIsIm5hbWUiLCJsaW5rIiwiY29udGFpbnMiLCJvd25lciIsImRlbGV0ZUVsZW1lbnQiLCJlbGVtZW50IiwibGlrZUVsZW1lbnQiLCJ0b2dnbGUiLCJzaG93SW5wdXRFcnJvciIsImZvcm1FbGVtZW50IiwiaW5wdXRFbGVtZW50IiwiZXJyb3JNZXNzYWdlIiwic2V0dGluZ3MiLCJwb3B1cEVycm9yIiwiaWQiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiaGlkZW5JcHV0RXJyb3IiLCJkaXNhYmxlZEJ1dHRvbiIsImJ1dHRvbkVsZW1lbnQiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiZGlzYWJsZWQiLCJjaGVja0lucHV0VmFsaWRpdHkiLCJ2YWxpZGl0eSIsInZhbGlkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJwYXR0ZXJuTWlzbWF0Y2giLCJzZXRDdXN0b21WYWxpZGl0eSIsImRhdGFzZXQiLCJzZXRFdmVudExpc3RlbmVycyIsImlucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsImZvckVhY2giLCJlbmFibGVWYWxpZGF0aW9uIiwiZm9ybUxpc3QiLCJmb3JtU2VsZWN0b3IiLCJoYXNJbnZhbGlkSW5wdXQiLCJzb21lIiwiY29uZmlnIiwiYmFzaWNVcmwiLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsIm9uUmVzcG9uc2UiLCJyZXMiLCJvayIsImpzb24iLCJ0aGVuIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImdldEFsbERhdGEiLCJhbGwiLCJ1c2VyRGF0YSIsImdldEFsbENhcmRzIiwiZmV0Y2giLCJlZGl0VXNlclByb2ZpbGUiLCJuYW1lSW5wdXQiLCJqb2JJbnB1dCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidmFsdWUiLCJhYm91dCIsImFkZENhcmQiLCJkZWxldGVDYXJkIiwiY2hhbmdlbGlrZVN0YXR1cyIsImlzTGlrZSIsImNoYW5nZUF2YXRhciIsInByb2ZpbGVBdmF0YXIiLCJhdmF0YXIiLCJzZXRCdXR0b25TdGF0dXMiLCJfcmVmIiwiYnV0dG9uIiwidGV4dCIsImJ1dHRvbk9wZW5FZGl0UHJvZmlsZUZvcm0iLCJwb3B1cEVkaXRQcm9maWxlIiwiYnV0dG9uT3BlbkFkZENhcmRGb3JtIiwicG9wdXBDYXJkcyIsInByb2ZpbGVOYW1lIiwicHJvZmlsZVN0YXR1cyIsImZvcm1FZGl0UHJvZmlsZSIsImZvcm1zIiwiZm9ybUFkZENhcmQiLCJuYW1lQ2FyZElucHV0IiwidXJsQ2FyZElucHV0IiwicG9wdXBzIiwicG9wdXBTdWJtaXQiLCJwb3B1cEF2YXRhciIsImF2YXRhckJ1dHRvbiIsImF2YXRhcklucHV0IiwicHJvZmlsZVBob3RvIiwiYXZhdGFyRm9ybSIsInRhcmdldCIsIl9yZWYyIiwiX3NsaWNlZFRvQXJyYXkiLCJ1c2VyIiwiY2FyZHMiLCJyZXZlcnNlIiwiY2FyZCIsImNhdGNoIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwiY2FyZElkIiwibGlrZUlkIiwic3VibWl0RWRpdFByb2ZpbGVGb3JtIiwicHJldmVudERlZmF1bHQiLCJmaW5hbGx5Iiwic3VibWl0Rm9ybUFkZENhcmQiLCJkYXRhQ2FyZCIsInJlc2V0Iiwic3VibWl0QXZhdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///745\n')}},__webpack_require__={d:(Q,F)=>{for(var U in F)__webpack_require__.o(F,U)&&!__webpack_require__.o(Q,U)&&Object.defineProperty(Q,U,{enumerable:!0,get:F[U]})},o:(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F)},__webpack_exports__={};__webpack_modules__[745](0,__webpack_exports__,__webpack_require__)})();